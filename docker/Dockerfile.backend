FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install minimal dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    python3 \
    python3-pip \
    openjdk-11-jre-headless \
    && rm -rf /var/lib/apt/lists/*

# Set Java environment  
ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64

# Accept build arguments
ARG GROQ_API_KEY
ARG OPENSEARCH_HOST=http://localhost:9200

# Set environment variables
ENV GROQ_API_KEY=$GROQ_API_KEY
ENV OPENSEARCH_HOST=$OPENSEARCH_HOST

WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip3 install -r requirements.txt

# Copy the backend directory
COPY backend/ .
ENV PYTHONPATH=/app

# Download and install OpenSearch
RUN wget https://artifacts.opensearch.org/releases/bundle/opensearch/2.11.1/opensearch-2.11.1-linux-x64.tar.gz \
    && tar -xzf opensearch-2.11.1-linux-x64.tar.gz \
    && mv opensearch-2.11.1 /opt/opensearch \
    && rm opensearch-2.11.1-linux-x64.tar.gz

# Create opensearch user
RUN groupadd -r opensearch && useradd -r -g opensearch opensearch \
    && mkdir -p /opt/opensearch/data /opt/opensearch/logs \
    && chown -R opensearch:opensearch /opt/opensearch

# Create minimal OpenSearch configuration for low memory
RUN echo "cluster.name: minimal-cluster" > /opt/opensearch/config/opensearch.yml \
    && echo "node.name: single-node" >> /opt/opensearch/config/opensearch.yml \
    && echo "network.host: 0.0.0.0" >> /opt/opensearch/config/opensearch.yml \
    && echo "discovery.type: single-node" >> /opt/opensearch/config/opensearch.yml \
    && echo "plugins.security.disabled: true" >> /opt/opensearch/config/opensearch.yml \
    && echo "bootstrap.memory_lock: false" >> /opt/opensearch/config/opensearch.yml \
    && echo "http.max_content_length: 10mb" >> /opt/opensearch/config/opensearch.yml \
    && echo "indices.memory.index_buffer_size: 5%" >> /opt/opensearch/config/opensearch.yml \
    && echo "indices.memory.min_index_buffer_size: 12mb" >> /opt/opensearch/config/opensearch.yml \
    && echo "thread_pool.write.queue_size: 200" >> /opt/opensearch/config/opensearch.yml \
    && echo "thread_pool.search.queue_size: 100" >> /opt/opensearch/config/opensearch.yml

# Ultra-low memory JVM settings (128MB total)
RUN echo "-Xms128m" > /opt/opensearch/config/jvm.options.d/memory.options \
    && echo "-Xmx128m" >> /opt/opensearch/config/jvm.options.d/memory.options \
    && echo "-XX:+UseG1GC" >> /opt/opensearch/config/jvm.options.d/memory.options \
    && echo "-XX:MaxGCPauseMillis=50" >> /opt/opensearch/config/jvm.options.d/memory.options \
    && echo "-XX:+DisableExplicitGC" >> /opt/opensearch/config/jvm.options.d/memory.options

# Create lightweight startup script
RUN echo "#!/bin/bash" > /app/start.sh \
    && echo "echo 'Starting minimal OpenSearch...'" >> /app/start.sh \
    && echo "su opensearch -c '/opt/opensearch/bin/opensearch &'" >> /app/start.sh \
    && echo "sleep 30" >> /app/start.sh \
    && echo "echo 'Starting FastAPI...'" >> /app/start.sh \
    && echo "cd /app && python3 -m uvicorn main:app --host 0.0.0.0 --port 8000 &" >> /app/start.sh \
    && echo "wait" >> /app/start.sh \
    && chmod +x /app/start.sh

# Expose ports
EXPOSE 8000 9200

# Simple health check
HEALTHCHECK --interval=60s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/ || exit 1

# Run services
CMD ["/app/start.sh"]
