FROM ubuntu:22.04

# Set environment variables to avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install system dependencies including Java for OpenSearch
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    python3 \
    python3-pip \
    python3-venv \
    openjdk-11-jre-headless \
    supervisor \
    && rm -rf /var/lib/apt/lists/*

# Set Java environment
ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64

# Accept build arguments
ARG GROQ_API_KEY
ARG OPENSEARCH_HOST=http://localhost:9200

# Set environment variables
ENV GROQ_API_KEY=$GROQ_API_KEY
ENV OPENSEARCH_HOST=$OPENSEARCH_HOST

WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip3 install -r requirements.txt

# Copy the backend directory into the container
COPY backend/ .

# Set Python path to include the app directory
ENV PYTHONPATH=/app

# Download and install OpenSearch
RUN wget https://artifacts.opensearch.org/releases/bundle/opensearch/2.11.1/opensearch-2.11.1-linux-x64.tar.gz \
    && tar -xzf opensearch-2.11.1-linux-x64.tar.gz \
    && mv opensearch-2.11.1 /opt/opensearch \
    && rm opensearch-2.11.1-linux-x64.tar.gz

# Create opensearch user and directories
RUN groupadd -r opensearch && useradd -r -g opensearch opensearch \
    && mkdir -p /opt/opensearch/data /opt/opensearch/logs \
    && chown -R opensearch:opensearch /opt/opensearch

# Create OpenSearch configuration
RUN echo "cluster.name: docker-cluster" > /opt/opensearch/config/opensearch.yml \
    && echo "network.host: 0.0.0.0" >> /opt/opensearch/config/opensearch.yml \
    && echo "discovery.type: single-node" >> /opt/opensearch/config/opensearch.yml \
    && echo "plugins.security.disabled: true" >> /opt/opensearch/config/opensearch.yml \
    && echo "bootstrap.memory_lock: false" >> /opt/opensearch/config/opensearch.yml \
    && echo "indices.query.bool.max_clause_count: 1024" >> /opt/opensearch/config/opensearch.yml

# Set OpenSearch JVM options for low memory
RUN echo "-Xms256m" > /opt/opensearch/config/jvm.options.d/heap.options \
    && echo "-Xmx256m" >> /opt/opensearch/config/jvm.options.d/heap.options

# Create supervisor configuration
RUN echo "[supervisord]" > /etc/supervisor/conf.d/supervisord.conf \
    && echo "nodaemon=true" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "user=root" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "[program:opensearch]" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "command=/opt/opensearch/bin/opensearch" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "user=opensearch" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "stdout_logfile=/var/log/opensearch.log" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "stderr_logfile=/var/log/opensearch.log" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "[program:fastapi]" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "command=python3 -m uvicorn main:app --host 0.0.0.0 --port 8000" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "directory=/app" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "user=root" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "stdout_logfile=/var/log/fastapi.log" >> /etc/supervisor/conf.d/supervisord.conf \
    && echo "stderr_logfile=/var/log/fastapi.log" >> /etc/supervisor/conf.d/supervisord.conf

# Create startup script
RUN echo "#!/bin/bash" > /app/start.sh \
    && echo "echo 'Starting OpenSearch and FastAPI...'" >> /app/start.sh \
    && echo "/usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf &" >> /app/start.sh \
    && echo "echo 'Waiting for OpenSearch to start...'" >> /app/start.sh \
    && echo "sleep 45" >> /app/start.sh \
    && echo "until curl -s http://localhost:9200/_cluster/health >/dev/null 2>&1; do" >> /app/start.sh \
    && echo "  echo 'Still waiting for OpenSearch...'" >> /app/start.sh \
    && echo "  sleep 10" >> /app/start.sh \
    && echo "done" >> /app/start.sh \
    && echo "echo 'OpenSearch is ready!'" >> /app/start.sh \
    && echo "echo 'Services are running...'" >> /app/start.sh \
    && echo "tail -f /var/log/opensearch.log /var/log/fastapi.log" >> /app/start.sh \
    && chmod +x /app/start.sh

# Expose ports
EXPOSE 8000 9200

# Health check
HEALTHCHECK --interval=30s --timeout=15s --start-period=120s --retries=3 \
    CMD curl -f http://localhost:8000/ && curl -f http://localhost:9200/_cluster/health || exit 1

# Run both services
CMD ["/app/start.sh"]
